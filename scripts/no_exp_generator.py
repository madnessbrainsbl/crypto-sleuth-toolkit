#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä JWT —Ç–æ–∫–µ–Ω–æ–≤ –ë–ï–ó –ø–æ–ª—è exp (–∫–∞–∫ —É —Ä–∞–±–æ—á–µ–≥–æ —Ç–æ–∫–µ–Ω–∞)
"""

import jwt
from datetime import datetime

# –ö–ª—é—á –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∏–∑ –∞–Ω–∞–ª–∏–∑–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞
SECRET_KEY = "sssss3issssssmossssssmssssss/dssssssisssss"

def generate_token_no_exp(vehicle_id):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –ë–ï–ó –ø–æ–ª—è exp (–∫–∞–∫ —É —Ä–∞–±–æ—á–µ–≥–æ)"""
    payload = {
        "vehicle_id": vehicle_id,
        "iss": "CunBA",
        "timestamp": int(datetime.now().timestamp())
    }
    
    try:
        token = jwt.encode(payload, SECRET_KEY, algorithm='HS256')
        return token
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def generate_token_with_exact_timestamp(vehicle_id, timestamp):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ —Å —Ç–æ—á–Ω–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π"""
    payload = {
        "vehicle_id": vehicle_id,
        "iss": "CunBA", 
        "timestamp": timestamp
    }
    
    try:
        token = jwt.encode(payload, SECRET_KEY, algorithm='HS256')
        return token
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        vehicle_id = sys.argv[1]
    else:
        vehicle_id = input("–í–≤–µ–¥–∏—Ç–µ vehicle_id: ")
    
    print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT –ë–ï–ó –ø–æ–ª—è exp:")
    print("="*50)
    
    # –¢–æ–∫–µ–Ω –±–µ–∑ exp
    token_no_exp = generate_token_no_exp(vehicle_id)
    if token_no_exp:
        print("‚úÖ JWT —Ç–æ–∫–µ–Ω –ë–ï–ó –ø–æ–ª—è exp:")
        print("="*80)
        print(token_no_exp)
        print("="*80)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç–æ—á–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É —Ä–∞–±–æ—á–µ–≥–æ —Ç–æ–∫–µ–Ω–∞
    print(f"\nüéØ –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Å timestamp —Ä–∞–±–æ—á–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ (1753096202):")
    token_exact = generate_token_with_exact_timestamp(vehicle_id, 1753096202)
    if token_exact:
        print("="*80)
        print(token_exact)
        print("="*80)
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ä–∞–±–æ—á–∏–º —Ç–æ–∫–µ–Ω–æ–º
        working_token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2ZWhpY2xlX2lkIjoiMGQ3OWZmMDQ3ZjVjZWM1YmYyZWMyZWM3ZDNlNDY0Y2UiLCJpc3MiOiJDdW5CQSIsInRpbWVzdGFtcCI6MTc1MzA5NjIwMn0.MWlqDVyQK4lhpZNZgaBS6gHisirYceGIxWvb9Q1-zXw"
        if token_exact == working_token:
            print("üéâ –ò–î–ï–ù–¢–ò–ß–ï–ù —Ä–∞–±–æ—á–µ–º—É —Ç–æ–∫–µ–Ω—É!")
        else:
            print("‚ö†Ô∏è  –û—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä–∞–±–æ—á–µ–≥–æ —Ç–æ–∫–µ–Ω–∞")
            print(f"–†–∞–±–æ—á–∏–π: {working_token}")
            print(f"–ù–∞—à:     {token_exact}")
